services:
  traefik:
    container_name: traefik
    image: traefik:v2.6
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - letsencrypt:/letsencrypt
    networks:
      - traefik
    environment:
      - TZ=Europe/Berlin
      - CLOUDFLARE_EMAIL=${CLOUDFLARE_EMAIL}
      - CLOUDFLARE_DNS_API_TOKEN=${CLOUDFLARE_TOKEN}
    command:
      - --log.level=${LOG_LEVEL}
      - --providers.docker=true
      - --api.dashboard=false
      - --api.insecure=false
      - --certificatesresolvers.letsencrypt.acme.dnschallenge=true
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.provider=cloudflare
      - --certificatesresolvers.letsencrypt.acme.email=$ACME_EMAIL
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
      # http
      - --entrypoints.http.address=:${HTTP_PORT}
      - --entrypoints.http.http.redirections.entrypoint.to=https
      # https
      - --entrypoints.https.address=:${HTTPS_PORT}
      - --entrypoints.http.http.redirections.entrypoint.scheme=https
      - --entrypoints.https.http.tls=true
      - --entrypoints.https.http.tls.certResolver=letsencrypt
      - --entrypoints.https.http.tls.domains[0].main=${DOMAIN0}
      - --entrypoints.https.http.tls.domains[0].sans=*.${DOMAIN0}
      - --entrypoints.https.http.tls.domains[1].main=${DOMAIN1}
      - --entrypoints.https.http.tls.domains[1].sans=*.${DOMAIN1}
    dns:
      - 1.1.1.1
      - 1.0.0.1

  traefik-certs-dumper:
    image: ldez/traefik-certs-dumper:v2.8.1
    entrypoint: sh -c '
      apk add jq
      ; while ! [ -e /data/acme.json ]
      || ! [ `jq ".[] | .Certificates | length" /data/acme.json` != 0 ]; do
      sleep 1
      ; done
      && traefik-certs-dumper file --version v2 --watch
      --source /data/acme.json --dest /data/dump --crt-ext=.pem --key-ext=.pem --domain-subdir'
    volumes:
      - letsencrypt:/data

volumes:
  letsencrypt:
    driver: local

networks:
  traefik:
    external: true
